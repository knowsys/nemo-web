// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Generated by cue.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface PredicateWithParameters
 */
export interface PredicateWithParameters {
  /**
   *
   * @type {string}
   * @memberof PredicateWithParameters
   */
  name: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PredicateWithParameters
   */
  parameters: Array<string>;
}

/**
 * Check if a given object implements the PredicateWithParameters interface.
 */
export function instanceOfPredicateWithParameters(
  value: object,
): value is PredicateWithParameters {
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("parameters" in value) || value["parameters"] === undefined)
    return false;
  return true;
}

export function PredicateWithParametersFromJSON(
  json: any,
): PredicateWithParameters {
  return PredicateWithParametersFromJSONTyped(json, false);
}

export function PredicateWithParametersFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PredicateWithParameters {
  if (json == null) {
    return json;
  }
  return {
    name: json["name"],
    parameters: json["parameters"],
  };
}

export function PredicateWithParametersToJSON(
  json: any,
): PredicateWithParameters {
  return PredicateWithParametersToJSONTyped(json, false);
}

export function PredicateWithParametersToJSONTyped(
  value?: PredicateWithParameters | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    name: value["name"],
    parameters: value["parameters"],
  };
}
