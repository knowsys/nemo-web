/* tslint:disable */
/* eslint-disable */
/**
 * Generated by cue.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface TableEntryResponse
 */
export interface TableEntryResponse {
  /**
   * each table result gets some kind of id (maybe just index); this is the only way to query facts that feature nulls
   * @type {number}
   * @memberof TableEntryResponse
   */
  entryId: number;
  /**
   *
   * @type {Array<string>}
   * @memberof TableEntryResponse
   */
  termTuple: Array<string>;
}

/**
 * Check if a given object implements the TableEntryResponse interface.
 */
export function instanceOfTableEntryResponse(
  value: object,
): value is TableEntryResponse {
  if (!("entryId" in value) || value["entryId"] === undefined) return false;
  if (!("termTuple" in value) || value["termTuple"] === undefined) return false;
  return true;
}

export function TableEntryResponseFromJSON(json: any): TableEntryResponse {
  return TableEntryResponseFromJSONTyped(json, false);
}

export function TableEntryResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): TableEntryResponse {
  if (json == null) {
    return json;
  }
  return {
    entryId: json["entryId"],
    termTuple: json["termTuple"],
  };
}

export function TableEntryResponseToJSON(json: any): TableEntryResponse {
  return TableEntryResponseToJSONTyped(json, false);
}

export function TableEntryResponseToJSONTyped(
  value?: TableEntryResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    entryId: value["entryId"],
    termTuple: value["termTuple"],
  };
}
