// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Generated by cue.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { TableEntryQuery } from "./TableEntryQuery";
import {
  TableEntryQueryFromJSON,
  TableEntryQueryFromJSONTyped,
  TableEntryQueryToJSON,
  TableEntryQueryToJSONTyped,
} from "./TableEntryQuery";
import type { TableQueryBaseTableEntriesPagination } from "./TableQueryBaseTableEntriesPagination";
import {
  TableQueryBaseTableEntriesPaginationFromJSON,
  TableQueryBaseTableEntriesPaginationFromJSONTyped,
  TableQueryBaseTableEntriesPaginationToJSON,
  TableQueryBaseTableEntriesPaginationToJSONTyped,
} from "./TableQueryBaseTableEntriesPagination";

/**
 *
 * @export
 * @interface TableQueryBaseTableEntries
 */
export interface TableQueryBaseTableEntries {
  /**
   *
   * @type {Array<TableEntryQuery>}
   * @memberof TableQueryBaseTableEntries
   */
  queries?: Array<TableEntryQuery>;
  /**
   *
   * @type {TableQueryBaseTableEntriesPagination}
   * @memberof TableQueryBaseTableEntries
   */
  pagination?: TableQueryBaseTableEntriesPagination;
}

/**
 * Check if a given object implements the TableQueryBaseTableEntries interface.
 */
export function instanceOfTableQueryBaseTableEntries(
  value: object,
): value is TableQueryBaseTableEntries {
  return true;
}

export function TableQueryBaseTableEntriesFromJSON(
  json: any,
): TableQueryBaseTableEntries {
  return TableQueryBaseTableEntriesFromJSONTyped(json, false);
}

export function TableQueryBaseTableEntriesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): TableQueryBaseTableEntries {
  if (json == null) {
    return json;
  }
  return {
    queries:
      json["queries"] == null
        ? undefined
        : (json["queries"] as Array<any>).map(TableEntryQueryFromJSON),
    pagination:
      json["pagination"] == null
        ? undefined
        : TableQueryBaseTableEntriesPaginationFromJSON(json["pagination"]),
  };
}

export function TableQueryBaseTableEntriesToJSON(
  json: any,
): TableQueryBaseTableEntries {
  return TableQueryBaseTableEntriesToJSONTyped(json, false);
}

export function TableQueryBaseTableEntriesToJSONTyped(
  value?: TableQueryBaseTableEntries | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    queries:
      value["queries"] == null
        ? undefined
        : (value["queries"] as Array<any>).map(TableEntryQueryToJSON),
    pagination: TableQueryBaseTableEntriesPaginationToJSON(value["pagination"]),
  };
}
